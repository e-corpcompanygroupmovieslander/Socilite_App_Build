const ADD=(ELEMENT,ELEMENT1)=>{CONDITION(ELEMENT,()=>ELEMENT.append(ELEMENT1),()=>document.body.append(ELEMENT1))};
const APPCOLOR=(ELEMENT,COLOR)=>{CONDITION(ELEMENT,()=>STYLED(ELEMENT,'color',COLOR),()=>document.body.style.color=COLOR)};
const APPMODE=(ELEMENT,IMG,DEFAULT)=>{if (IMG==='Image'){document.body.style.backgroundImage=`url(${ELEMENT})`;document.body.style.backgroundRepeat='no-repeat';document.body.style.backgroundPosition='center';document.body.style.backgroundSize='cover'}else{if (ELEMENT){localStorage.setItem('ModeColour',ELEMENT);document.body.style.background=ELEMENT}else{localStorage.setItem('ModeColour',DEFAULT);document.body.style.background=DEFAULT}}};
const CHECK=(ELEMENT,ACTION)=>{const result=ELEMENT;return ACTION(result ? result:false)};
const CLEAR=(ELEMENT)=>{CONDITION(ELEMENT,()=>DISPLAY(ELEMENT,''),()=>DISPLAY(document.body,''))};
const CONDITION=(CONDITION,ACTION,ACTION1)=>{if (CONDITION){return ACTION()}else{return ACTION1()}};
const CREATEELEMENT=(ITEM,CLASS,callback)=>{const ELEMENT=document.createElement(ITEM);if (CLASS){ELEMENT.classList.add(CLASS)}return callback(ELEMENT)};
const DECLARATION=(CLASS,callback)=>{const ELEMENT=document.querySelector(CLASS);return callback(ELEMENT)};
const DEJSON=(STORAGE,KEY,callback)=>{let JSONDATA='';CONDITION(STORAGE,()=>{JSONDATA=localStorage.getItem(KEY);return JSONDATA},()=>{JSONDATA=sessionStorage.getItem(KEY);return JSONDATA});if (JSONDATA){let data=JSON.parse(JSONDATA);return callback(data)}else{console.error('No data found in storage');return null}};
const DISPLAY=(ELEMENT,ELEMENT1)=>{CONDITION(ELEMENT,()=>ELEMENT.innerHTML=ELEMENT1,()=>document.body.innerHTML=ELEMENT1)};
const ENVIRONMENT=(TEXT)=>{if (TEXT){localStorage.setItem('Environment','Test');document.body.style.top='0';document.body.style.bottom='0'}else{localStorage.setItem('Environment','Production');document.body.style.top='30px'}};
const EVENT=(ELEMENT,FUNCTION,callback)=>{ELEMENT.addEventListener(FUNCTION,callback)};
const EXTERNALJS=(PATH,callback)=>{var script=document.createElement('script');script.src=PATH;script.async=true;script.onload=function(){console.log('Script loaded successfully');if (typeof callback==='function'){callback()}};document.head.appendChild(script)};
const EXTERNALCSS=(PATH)=>{var script=document.createElement('link');script.rel='stylesheet';script.href=PATH;{console.log('Styles loaded successfully')};document.head.appendChild(script)};
const FACEBOOK=(usernameOrProfileId)=>{var facebookLink='https://www.facebook.com/'+encodeURIComponent(usernameOrProfileId);window.open(facebookLink)};
const FILES=(callback)=>{const fileInput=document.createElement('input');fileInput.type='file';fileInput.style.display='none';fileInput.addEventListener('change',function(){const file=fileInput.files[0];const reader=new FileReader();reader.onload=function(event){const fileData=event.target.result.split(',')[1];callback(fileData)};reader.onerror=function(event){callback(null)}; reader.readAsDataURL(file); });fileInput.click()};
const FINDER=(DATA,ELEMENT,ELEMENT1,ACTION)=>{const user=DATA.find(item=>item[ELEMENT]===ELEMENT1);return ACTION(user ? user:false)};
const GETPACKAGE=(URL,MODE,callback)=>{fetch(URL,{method:"GET",mode:MODE}) .then((response)=>{if (!response.ok){throw new Error('Network response was not ok')}const contentType=response.headers.get('Content-Type');if (contentType && contentType.includes('application/json')){return response.json()}else{return response.text()}}) .then((data)=>{callback(data)}) .catch((error)=>{console.error('There has been a problem with your fetch operation:',error);throw error})};
const GETSTORE=(STORAGE,KEY)=>{CONDITION(STORAGE==='local',()=>localStorage.getItem(KEY),()=>sessionStorage.getItem(KEY))};
const GMAIL=(emailAddress)=>{var mailtoLink='mailto:'+encodeURIComponent(emailAddress);window.open(mailtoLink)};
const INSTAGRAM=(username)=>{var instagramLink='https://www.instagram.com/'+encodeURIComponent(username);window.open(instagramLink)};
const JSONIFICATION=(data,callback)=>{let DATA=JSON.stringify(data);callback(DATA)};
const MODULE=(PATH,MODULE_NAME,callback)=>{import(PATH).then(module=>{callback(module[MODULE_NAME])}).catch(error=>{console.error('Error importing module:',error)})};
const PASSWORDDEHASH=async (hashedPassword,inputPassword,callback)=>{try{const encoder=new TextEncoder();const inputData=encoder.encode(inputPassword);const inputHashBuffer=await crypto.subtle.digest('SHA-256',inputData);const inputHashArray=Array.from(new Uint8Array(inputHashBuffer));const inputHashHex=inputHashArray.map(byte=>byte.toString(16).padStart(2,'0')).join('');const match=hashedPassword===inputHashHex;callback(match)}catch (error){console.log(error)}};
const PASSWORDHASH=async (password,callback)=>{try{const encoder=new TextEncoder();const data=encoder.encode(password);const hashBuffer=await crypto.subtle.digest('SHA-256',data);const hashArray=Array.from(new Uint8Array(hashBuffer));const hashHex=hashArray.map(byte=>byte.toString(16).padStart(2,'0')).join('');callback(hashHex)}catch (error){console.log(error)}};
const POSTPACKAGE=(URL,MODE,DATA,callback)=>{const headers={'Content-Type':'application/json',};fetch(URL,{method:'POST',mode:MODE,headers:headers,body:JSON.stringify(DATA),}) .then(res=>{const contentType=res.headers.get('Content-Type');if (contentType && contentType.includes('application/json')){return res.json()}else{return res.text()}}) .then((data)=>{callback(data)}) .catch((error)=>{console.error('There has been a problem with your fetch operation:',error);throw error})};
const REDUX=(DATA,ACTION)=>{const modifiedData=[];DATA.forEach(element=>{modifiedData.push(ACTION(element))});return modifiedData};
const REMOVESTORE=(STORAGE,KEY)=>{CONDITION(STORAGE==='local',()=>localStorage.removeItem(KEY),()=>sessionStorage.removeItem(KEY))};
const REVERSE=(data,callback)=>{let DATA=data.reverse();callback(DATA)};
const SHUFFLE=(array,callback)=>{for (let i=array.length - 1;i>0;i--){const j=Math.floor(Math.random() * (i+1));[array[i],array[j]]=[array[j],array[i]]}callback(array)};
const SINGLESHUFFLE=(array,callback)=>{const randomIndex=Math.floor(Math.random() * array.length);const shuffledElement=array[randomIndex];callback(shuffledElement)};
const STORE=(STORAGE,KEY,ELEMENT)=>{CONDITION(STORAGE==='local',()=>localStorage.setItem(KEY,ELEMENT),()=>sessionStorage.setItem(KEY,ELEMENT))};
const STYLED=(ELEMENT,PROPERTY,VALUE)=>{ELEMENT.style[PROPERTY]=VALUE};
const TELEGRAM=(username)=>{var telegramLink='https://t.me/'+encodeURIComponent(username);window.open(telegramLink)};
const TWITTER=(username)=>{var twitterLink='https://twitter.com/'+encodeURIComponent(username);window.open(twitterLink)};
const WEBSITE=(url)=>{window.open(url)};
const WHATSAPP=(phoneNumber)=>{var whatsappLink='https://wa.me/'+encodeURIComponent(phoneNumber);window.open(whatsappLink)};
const YOUTUBE=(query)=>{var youtubeLink='https://www.youtube.com/results?search_query='+encodeURIComponent(query);window.open(youtubeLink)};
const ZOOM=()=>{document.addEventListener('touchstart',function (event){if (event.touches.length>1){event.preventDefault()}},{passive:false});document.addEventListener('wheel',function (event){if ((event.ctrlKey || event.metaKey) && !event.shiftKey){event.preventDefault()}})};